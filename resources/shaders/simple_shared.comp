#version 430

layout( local_size_x = 32 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    double A[];
};


layout(std430, binding = 1) buffer Sum
{
    double sum[];
};


shared double shared_buffer[38];

void main() 
{

    uint idx = gl_GlobalInvocationID.x;
    
    if (idx < PushConstant.len)
    {
    
        uint local_id = gl_LocalInvocationID.x;
        uint group_id = gl_WorkGroupID.x;
        uint group_size = gl_WorkGroupSize.x;
        

        if (local_id < 3)
        {
            if(group_id > 0)
            {
                shared_buffer[local_id] = A[group_id * group_size - 3 + local_id];
            }
            else
            {
                shared_buffer[local_id] = 0.0;
            }

        }

        if(local_id >= group_size - 3)
        {
            if(!(group_id == gl_NumWorkGroups.x - 1))
            {
                shared_buffer[local_id + 6] = A[group_id * group_size + (local_id + 3)];
            }
            else
            {
                shared_buffer[local_id + 6] = 0.0;
            }
        }

        shared_buffer[local_id + 3] = A[idx];
 
        barrier();

        double filtredValue = shared_buffer[local_id+3];
        for(int i = -3; i < 4; ++i)
            if ((local_id + i + 3 < 38)&&(local_id + i + 3 >= 0))
                filtredValue -= shared_buffer[local_id + i + 3] / 7.0;
                    
        sum[idx] = filtredValue;
        
     }
    
}